% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backtracking.R
\name{backtracking}
\alias{backtracking}
\title{Backtracking line search.}
\usage{
backtracking(obj, X.list, searchD, rho = 0.5, c = 1e-04)
}
\arguments{
\item{obj}{A objective function.}

\item{X.list}{A list that must have the names, x (for the point), fx (for the value of the function in x), dfx (for the
value of the gradiente in x), as the example \cr
\code{x_example <- list(x = c(1,1), fx = 12, dfx = c(-1, 2))}. \cr}

\item{searchD}{A search direction for the method.}

\item{rho}{A number, control parameter.}

\item{c}{A number, control parameter.}
}
\value{
Returns the step length \code{alpha} for the univariate function.
}
\description{
\code{backtracking} is a line search method to determine a step length that minimize the function
in a given search direction. The method starts with a \code{alpha = 1} and iteratively modify it.
Based on the book "Numerical Optimization", Jorge Nocedal, for ensure that the algorithm makes reasonable progress along
in the given search direction, is used the control parameters with a default value, \code{rho = 0.5}
and \code{c = 1e-4}.
}
\examples{
f <- function(x) {... return(x)}
backtracking(f, x_example, c(1,-2))
backtracking(f, x_example, searchD = c(1,-2), rho = 0.1, c = 1e-6)

}
\references{
\enumerate{
\item Nocedal, Jorge; Wright, Stephen J.; \emph{Numerical Optimization}, 2nd ed., page 37.
\item Wikipedia, \emph{Backtracking line search} \url{https://en.wikipedia.org/wiki/Backtracking_line_search}.
}
}
