% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linesearch.R
\name{linesearch}
\alias{linesearch}
\title{Line search}
\usage{
linesearch(obj.list, X.list, searchD, Options.list)
}
\arguments{
\item{obj.list}{A list that must have the names, functionObj (for the objective function to be optimized),
gradientObj (for the corresponding gradient function), as the example \cr
\code{ objFG <- list(functionObj = f, gradientObj = df)} \cr \code{f} and \code{df} returns values.}

\item{X.list}{A list that must have the names, x (for the point), F(x) (for the value of the function in x),
dF(x) (for the value of the gradiente in x), as the example \cr
\code{x_example <- list(X = c(1,1), `F(x)` = 12, `dF(x)` = c(-1, 2))}. \cr}

\item{searchD}{A search direction for the method.}

\item{Options.list}{A list as the example \cr
\code{options <- list(A = , B = , Eps = ,  Method = , RhoBacktracking = , cBacktracing = , use_bracketing = ,
step_bracketing =)} \cr}
}
\value{
Returns a list that contains a \code{X.list} in the point optimum and the step length \code{alpha}
for the univariate function
}
\description{
\code{linesearch} is a function that englobes the methods: backtracking, quasi-newton and goldensection.
The extra parameters in this functions for control  and use in methos must be passed via Options.list.
}
\section{Options.list}{

In this function, Options.list may contain the following names:
\itemize{
\item use_bracketing = TRUE or FALSE, for determine whether bracketing should be used when choosing the
interval for search.
\item step_bracketing, for determine the step length in bracketing; if use_bracketing = TRUE, step_bracketing
must have a value.
\item A e B (numbers), user-determined search interval; default A = 0 and B = 1.
\item Method (a character string), in format "quadraticinterpolation" or "goldensection", if its NULL or not
passed, by default, the method used is backtracking.
\item rhoBacktracking and cBacktracking (numbers), control variables in backtracking.
\item Eps, epsilon = error tolerance, default = 1e-6
}
}

\examples{
options1 <-  list(Method = "goldensection", step_bracketing = 0.5, use_bracketing = TRUE)
options2 <- list(use_bracketing = FALSE, rhoBacktrackting = 0.6, cBacktrackting = 1e-6, Eps = 1e-7)
options3 <- list(Method = "quadraticinterpolation", A = 3, B = 5, use_bracketing = FALSE)

f <- function{return(fx)}
dfun <- functuib{return(dfx)}
x <- list(X = c(1,2), `F(x)` = f(c(1,2)), `dF(x)` = dfun(c(1,2)))
objfunctions <- list(functionObj = f, gradientObj = dfun)

linesearch(objfunctions, x, c(-3,2), options1)
linesearch(objfunctions, x, c(-3,2), options2)
linesearch(objfunctions, x, c(-3,2), options4)


}
\seealso{
The documentations of fuctions \code{backtracking}, \code{bracketing}, \code{quadraticinterpolation}
and \code{goldensection} in this package.
}
